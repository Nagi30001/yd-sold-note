<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ydxsj.ydsoldnote.mapper.SellReceiptsMapper">

    <!--  List<CarReceipts> getCarReceipts();   -->
    <select id="getCarReceipts" resultType="carReceipts">
        select * from yd_receipts_car_receipts
    </select>

    <!--  Integer insertGatheringMsg(GatheringMsg gatheringMsg);  -->
    <insert id="insertGatheringMsg" useGeneratedKeys="true"  keyProperty="id" >
        insert into yd_sold_note.yd_receipts_gathering_msg (yd_gathering, third_party_gathering, gathering_status, gathering_user_id)
        values (#{gatheringMsg.ydGathering},#{gatheringMsg.thirdPartyGathering},#{gatheringMsg.gatheringStatus},#{gatheringMsg.gatheringUserId})
    </insert>

    <!--  Integer insertCarReceiots(@Param("carReceipts") CarReceipts carReceipts);  -->
    <insert id="insertCarReceiots" useGeneratedKeys="true" keyProperty="id">
        insert into yd_sold_note.yd_receipts_car_receipts
        (receipts_status,create_time,user_id,province,city,client_name,client_car_num,client_phone,car_brand,count,sell_type_name,addition_type,third_party_terrace_id,
        money,cash_pledge,predict_install_time,gathering_msg_id,gathering_type)
        values
        (#{carReceipts.receiptsStatus},#{carReceipts.createTime},#{carReceipts.userId},#{carReceipts.province},#{carReceipts.city},#{carReceipts.clientName},
        #{carReceipts.clientCarNum},#{carReceipts.clientPhone},#{carReceipts.carBrand},#{carReceipts.count},#{carReceipts.sellTypeName},#{carReceipts.additionType},
        #{carReceipts.thirdPartyTerraceId},#{carReceipts.money},#{carReceipts.cashPledge},#{carReceipts.predictInstallTime},#{carReceipts.gatheringMsgId},#{carReceipts.gatheringType})
    </insert>

    <!--  List<CarReceipts> getCarReceiptsByProvince(@Param("provinces") List<String> provinces, @Param("page") Integer page ,@Param("count") Integer count);   -->
    <select id="getCarReceiptsByProvince" resultType="carReceipts">
        select * from yd_sold_note.yd_receipts_car_receipts where province in
        <foreach collection="provinces" item="province" open="(" separator="," close=")" index="index" >
            #{province}
        </foreach>
        order by create_time desc limit #{page},#{count}
    </select>

    <!--  GatheringMsg getGatheringMsgById(@Param("gatheringMsgId") Integer gatheringMsgId);  -->
    <select id="getGatheringMsgById" resultType="gatheringMsg">
        select * from yd_sold_note.yd_receipts_gathering_msg where id = #{gatheringMsgId}
    </select>

    <!-- List<CarReceipts> getCarReceiptsByStatus(@Param("i") int i,@Param("id") Integer id);   -->
    <select id="getCarReceiptsByStatus" resultType="carReceipts">
        select * from yd_sold_note.yd_receipts_car_receipts where receipts_status &lt;= #{i} and user_id = #{id} and receipts_status != 0
    </select>

    <!--  List<CarReceipts> getCarReceiptsByStatusOfTH(int i, Integer id);  -->
    <select id="getCarReceiptsByStatusOfTH" resultType="carReceipts">
        select * from yd_sold_note.yd_receipts_car_receipts where receipts_status = #{i} and third_party_terrace_id = #{id}
    </select>

    <!--  CarReceipts getCarReceiptsById(Integer id);  -->
    <select id="getCarReceiptsById" resultType="carReceipts">
        select * from yd_sold_note.yd_receipts_car_receipts where id = #{id}
    </select>

    <!-- Integer updateCheckTime(@Param("carReceipts") CarReceipts carReceipts,@Param("type") String type);  -->
    <update id="updateCheckTime">
        update yd_sold_note.yd_receipts_car_receipts
        <set>
            <if test="type == 'reachCheck' and carReceipts.receiptsReachCheck != null" >
            receipts_reach_check = #{carReceipts.receiptsReachCheck},receipts_status = #{carReceipts.receiptsStatus}
            </if>
            <if test="type == 'installCheck' and carReceipts.third_party_check_time != null" >
            third_party_check_time = #{carReceipts.thirdPartyCheckTime},receipts_status = #{carReceipts.receiptsStatus}
            </if>
            <if test="type == 'gatheringCheck' and carReceipts.collectionTime != null ">
                collection_time = #{carReceipts.collectionTime} ,receipts_status = #{carReceipts.receiptsStatus}
            </if>
        </set>
        where id = #{carReceipts.id}
    </update>

    <!-- Integer insertImageUrl(@Param("imageUrl") ImageUrl imageUrl);  -->
    <insert id="insertImageUrl" useGeneratedKeys="true" keyProperty="id">
        insert into yd_sold_note.yd_receipts_image_url (msg_id, url) values (#{imageUrl.msgId},#{imageUrl.url})
    </insert>

    <!--  Integer updateGatherimgMsg(@Param("gatheringMsg") GatheringMsg gatheringMsg);  -->
    <update id="updateGatherimgMsg" >
        update yd_sold_note.yd_receipts_gathering_msg set
        gathering_check_time = #{gatheringMsg.gatheringCheckTime},text = #{gatheringMsg.text} where id = #{gatheringMsg.id}
    </update>

    <!-- List<CarReceipts> getCarReceiptsByTPId(@Param("id") Integer id);   -->
    <select id="getCarReceiptsByTPId" resultType="carReceipts">
        select * from yd_sold_note.yd_receipts_car_receipts where third_party_terrace_id = #{id} order by create_time desc
    </select>

    <!--  List<CarReceipts> getCarReceiptsByCreateId(@Param("id")Integer id);  -->
    <select id="getCarReceiptsByCreateId" resultType="carReceipts">
        select * from yd_sold_note.yd_receipts_car_receipts where user_id = #{id} order by create_time desc
    </select>

    <!--  Integer updateCarReceiptsStatus(@Param("carReceipts") CarReceipts carReceipts);  -->
    <update id="updateCarReceiptsStatus" useGeneratedKeys="true">
        update yd_sold_note.yd_receipts_car_receipts set
        receipts_status = #{carReceipts.receiptsStatus} , cancellation_time = #{carReceipts.cancellationTime} where id = #{carReceipts.id}
    </update>

    <!--  List<ImageUrl> getImageUrls(@Param("id") Integer id);  -->
    <select id="getImageUrls" resultType="imageUrl">
        select * from yd_sold_note.yd_receipts_image_url where msg_id = #{id}
    </select>

    <!--List<CarReceipts> searchCarReceipts(@Param("queryCRMsg") QueryCRMsg queryCRMsg);-->
    <select id="searchCarReceipts" resultType="carReceipts">
      select * from yd_sold_note.yd_receipts_car_receipts
      <where>
          <if test="queryCRMsg.type == 'DT' ">
              user_id in
            <foreach collection="queryCRMsg.users" item="user" open="(" separator="," close=")" index="index">
                 #{user.id}
            </foreach>
             and province in
            <foreach collection="queryCRMsg.provinces" item="province" open="(" separator="," close=")" index="index">
              #{province}
            </foreach>
          </if>
          <if test="queryCRMsg.type == 'YD'">
               user_id = #{queryCRMsg.userId}
          </if>
          <if test="queryCRMsg.type == 'PT'">
               third_party_terrace_id = #{queryCRMsg.userId}
          </if>
          <if test="queryCRMsg.type != 'PT' and queryCRMsg.type != 'DT' and queryCRMsg.type != 'YD'">
              user_id = 0
          </if>
          <if test="queryCRMsg.sellType != null ">
              and sell_type_name  = #{queryCRMsg.sellType}
          </if>
          <if test="queryCRMsg.TPId != null ">
              and third_party_terrace_id = #{queryCRMsg.TPId}
          </if>
          <if test="queryCRMsg.clientName != null ">
              and client_name like #{queryCRMsg.clientName}
          </if>
          <if test="queryCRMsg.clientCarNum != null ">
              and client_car_num like #{queryCRMsg.clientCarNum}
          </if>
          <if test="queryCRMsg.channel != null ">
              and channel_id = #{queryCRMsg.channel}
          </if>
          <if test="queryCRMsg.status != null ">
              and receipts_status = #{queryCRMsg.status}
          </if>
          <if test="queryCRMsg.checkTimeType != null ">
              <if test="queryCRMsg.checkTimeType == '创建时间' ">
                  <if test="queryCRMsg.startingDate != null ">
                      and create_time &gt; #{queryCRMsg.startingDate}
                  </if>
                  <if test="queryCRMsg.endDate != null ">
                      and create_time &lt; #{queryCRMsg.endDate}
                  </if>
              </if>
              <if test="queryCRMsg.checkTimeType == '收款时间' ">
                  <if test="queryCRMsg.startingDate != null ">
                      and collection_time &gt; #{queryCRMsg.startingDate}
                  </if>
                  <if test="queryCRMsg.endDate != null ">
                      and collection_time &lt; #{queryCRMsg.endDate}
                  </if>
              </if>
              <if test="queryCRMsg.checkTimeType == '安装时间' ">
                  <if test="queryCRMsg.startingDate != null ">
                      and third_party_check_time &gt; #{queryCRMsg.startingDate}
                  </if>
                  <if test="queryCRMsg.endDate != null ">
                      and third_party_check_time &lt; #{queryCRMsg.endDate}
                  </if>
              </if>
          </if>
          <if test="queryCRMsg.checkTimeType == null ">
              <if test="queryCRMsg.startingDate != null ">
                  and create_time &gt; #{queryCRMsg.startingDate}
              </if>
              <if test="queryCRMsg.endDate != null ">
                  and create_time &lt; #{queryCRMsg.endDate}
              </if>
          </if>
      </where>
        limit #{queryCRMsg.page},#{queryCRMsg.count}
    </select>

    <!--Integer updateCarReceipts(@Param("s") CarReceipts carReceipts1);-->
    <update id="updateCarReceipts" useGeneratedKeys="true">
        update yd_sold_note.yd_receipts_car_receipts
        <set>
            <if test="s.receiptsStatus != null">
                receipts_status = #{s.receiptsStatus},
            </if>
            <if test="s.equipmentBrand != null ">
                equipment_brand = #{s.equipmentBrand},
            </if>
            <if test="s.equipmentTypeNum != null" >
                equipment_type_num = #{s.equipmentTypeNum},
            </if>
            <if test="s.size != null" >
                size = #{s.size},
            </if>
            <if test="s.thirdPartyCheckTime != null" >
                third_party_check_time = #{s.thirdPartyCheckTime},
            </if>
            <if test="s.iccid != null" >
                iccid = #{s.iccid}
            </if>
        </set>
        where id = #{s.id}
    </update>

    <!--List<ImageUrl> getAllImageUrls();-->
    <select id="getAllImageUrls" resultType="imageUrl">
        select * from yd_sold_note.yd_receipts_image_url
    </select>

</mapper>
