<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ydxsj.ydsoldnote.mapper.UserMapper">

    <!--User selectUserById(Integer userId);-->
    <select id="selectUserById" resultType="user">
        select * from yd_receipts_yd_user where id = #{userId}
    </select>

    <!-- User selectUserByJobName(String jobName);       -->
    <select id="selectUserByJobName" resultType="user">
        select * from yd_receipts_yd_user where job_num = #{jobName}
    </select>

    <!--  List<User> selectUserByRole(String role);  -->
    <select id="selectUserByRole" resultType="user">
        select * from yd_sold_note.yd_receipts_yd_user where role_num = #{role} order by job_num desc
    </select>

    <!--  List<User> getUsersByProvince(@Param("provinces") List<String> provinces,@Param("type") String type);  -->
    <select id="getUsersByProvince" resultType="user">
        select * from yd_sold_note.yd_receipts_yd_user where province in
        <foreach collection="provinces" item="province" open="(" separator="," close=")" index="index" >
            #{province}
        </foreach>
        <if test="type == 'yd'">
            and  role_num != 'R1004'
        </if>
        <if test="type == 'pt'">
            and  role_num = 'R1004'
        </if>

    </select>

    <!--  List<Role> getRoles(@Param("type") String type);  -->
    <select id="getRoles" resultType="role">
        select * from yd_sold_note.yd_receipts_role
        <where>
            <if test="type == 'common' ">
                role_num != 'R1001'
            </if>
        </where>
    </select>

    <!--  Integer selectUserByJobNum(@Param("jobNum") String jobNum);  -->
    <select id="selectUserByJobNum"  resultType="java.lang.Integer">
        select count(*) from yd_sold_note.yd_receipts_yd_user where job_num = #{jobNum}
    </select>

    <!--  Integer insertUser(@Param("user") User user);  -->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id" >
        insert into yd_sold_note.yd_receipts_yd_user (job_num, job_password, user_name, phone, province, city, role_num, create_user, create_time, address, status, be_province)
        values (#{user.jobNum},#{user.jobPassword},#{user.userName},#{user.phone},#{user.province},#{user.city},#{user.roleNum},#{user.createUser},#{user.createTime},#{user.address},#{user.status},#{user.beProvince})
    </insert>

    <!--  Integer updateUser(@Param("user")User user);  -->
    <update id="updateUser" useGeneratedKeys="true">
        update yd_sold_note.yd_receipts_yd_user set
        job_password = #{user.jobPassword},user_name = #{user.userName},phone = #{user.phone},province = #{user.province},city = #{user.city},role_num = #{user.roleNum},
        address = #{user.address},be_province = #{user.beProvince},status = #{user.status}
        where job_num = #{user.jobNum}
    </update>

    <!-- List<User> getUserByLikeUserName(String sellName);  -->
    <select id="getUserByLikeUserName" resultType="user">
        select * from yd_sold_note.yd_receipts_yd_user where user_name like #{sellName}
    </select>

    <!--  List<User> getPlatformsByProvince(@Param("provinces")List<Province> provinces);  -->
    <select id="getPlatformsByProvince" resultType="user">
        select * from yd_sold_note.yd_receipts_yd_user where province in
        <foreach collection="provinces" item="province" open="(" separator="," close=")" index="index"  >
            #{province.province}
        </foreach>
        and role_num in ('R1004','R1005')
    </select>

    <!--Integer updateUserMsg(@Param("user") User user1);-->
    <update id="updateUserMsg" useGeneratedKeys="true">
      update yd_sold_note.yd_receipts_yd_user
      <set>
          <if test="user.jobPassword != null">
              job_password = #{user.jobPassword},
          </if>
      </set>
      where id = #{user.id}
    </update>
</mapper>
